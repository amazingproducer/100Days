void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/amazingproducer/100Days"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build-status"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building.'
                sh 'python3 -m venv products/076.longjacket.pwa/venv'
                sh '. products/076.longjacket.pwa/venv/bin/activate'
                sh 'source /var/lib/jenkins/.profile'
                sh 'python3 -m pip install -r /var/lib/jenkins/workspace/longjacket/products/076.longjacket.pwa/requirements.txt'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing.'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying'
		    
            }
        }
    }
    post {
        always {
            echo 'This will always run.'
        }
        success {
            echo 'This will run only if successful.'
            setBuildStatus("Build succeeded", "SUCCESS");
            sh 'sudo supervisorctl restart longjacket'
        }
        failure {
            echo 'This will run only if failed'
            setBuildStatus("Build failed", "FAILURE");
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }

